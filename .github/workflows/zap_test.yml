name: SCA & ZAP-Test

on:
  push: 
    branches: [ master ]

jobs: 
  build: 
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v2

      # Étape : Configuration Python
      - name: Setup Python 3.7.10
        uses: actions/setup-python@v1
        with: 
          python-version: 3.7.10

      # Étape : Installation des dépendances Python
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-owasp-zap-v2.4

      # Étape : Analyse avec Pyraider
      - name: Install Pyraider
        run: pip install pyraider
      
      - name: Run Pyraider SCA scan
        run: |
          pyraider scan
          pyraider report --json > pyraider-report.json

      - name: "Upload Pyraider Report"
        uses: actions/upload-artifact@v1
        with:
          name: pyraider-sca-report
          path: pyraider-report.json

      # Étape : Construction de l'image Docker de l'application
      - name: Build Docker Image
        run: docker build -t vulnerable-app .

      # Étape : Installation de OWASP ZAP
      - name: Install OWASP ZAP
        run: |
          mkdir -p ./zap
          cd ./zap
          wget -N https://github.com/zaproxy/zaproxy/releases/download/v2.9.0/ZAP_2.9.0_Linux.tar.gz
          tar -zxvf ZAP_2.9.0_Linux.tar.gz
          rm ZAP_2.9.0_Linux.tar.gz
          cd ZAP_2.9.0/plugin
          wget https://github.com/zaproxy/zap-extensions/releases/download/exportreport-v6/exportreport-alpha-6.zap
          chmod +x ../zap.sh

      # Étape : Lancer le conteneur Docker de l'application
      - name: Run Docker Container
        run: docker run -d -p 5050:5050 vulnerable-app

      # Étape : Démarrer ZAP en mode démon
      - name: Run ZAP Daemon
        run: ./zap/ZAP_2.9.0/zap.sh -daemon -host 0.0.0.0 -port 8090 -config api.addrs.addr.name=".*" -config api.addrs.addr.regex=true -config api.disablekey=true > /dev/null &

      # Étape : Pause pour s'assurer que ZAP démarre correctement
      - name: Sleep for a bit
        uses: jakejarvis/wait-action@master
        with:
          time: '20s'

      # Étape : Exécution des tests automatisés avec ZAP
      - name: Run Test Automation with ZAP
        run: |
          cd ./tests/
          python e2e_zap.py

      # Étape : Téléverser le rapport ZAP
      - name: "Upload ZAP Report"
        uses: actions/upload-artifact@v3
        with:
          name: zap-scan-report
          path: ./tests/zap-report.json
